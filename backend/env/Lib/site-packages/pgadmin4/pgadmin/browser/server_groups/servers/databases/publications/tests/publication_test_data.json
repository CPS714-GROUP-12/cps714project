{
  "add_publication": [
    {
      "name": "Create publication with insert and update",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "test_data": {
        "name": "PLACEHOLDER",
        "evnt_insert": true,
        "evnt_update": true,
        "evnt_delete": false,
        "evnt_truncate": false,
        "publish_via_partition_root": false,
        "pubowner": "postgres",
        "all_table": true,
        "pubtable": ""
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Create publication for few tables",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "few_tables": true,
      "test_data": {
        "name": "PLACEHOLDER",
        "evnt_insert": true,
        "evnt_update": true,
        "evnt_delete": false,
        "evnt_truncate": false,
        "publish_via_partition_root": false,
        "pubowner": "postgres",
        "all_table": false,
        "pubtable": "PLACE_HOLDER"
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Create a publication without name",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "without_name": true,
      "test_data": {
        "name": "PLACEHOLDER",
        "evnt_insert": true,
        "evnt_update": true,
        "evnt_delete": false,
        "evnt_truncate": false,
        "pubowner": "postgres",
        "all_table": true,
        "pubtable": ""
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 410
      }
    },
    {
      "name": "Error while adding a publication",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "error_creating_publication": true,
      "test_data": {
        "name": "PLACEHOLDER",
        "evnt_insert": true,
        "evnt_update": true,
        "evnt_delete": false,
        "evnt_truncate": false,
        "pubowner": "postgres",
        "all_table": true,
        "pubtable": ""
      },
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error ')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Exception while adding a publication",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "test_data": {
        "name": "PLACEHOLDER",
        "evnt_insert": true,
        "evnt_update": true,
        "evnt_delete": false,
        "evnt_truncate": false,
        "pubowner": "postgres",
        "all_table": true,
        "pubtable": ""
      },
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(True, True)(False, 'Mocked Internal Server Error ')"
      },
      "expected_data": {
        "status_code": 500
      }
    }
  ],
  "get_publication": [
    {
      "name": "Get a publication URL",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching a publication properties",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Get a publication properties under database nodes",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "database_nodes": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching a publication properties under database nodes",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "database_nodes": true,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Get a publication Node",
      "url": "/browser/publication/nodes/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Get a publication Node dependants",
      "url": "/browser/publication/dependent/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Get a publication Node dependency",
      "url": "/browser/publication/dependency/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching the publication under the database nodes using wrong database id",
      "url": "/browser/publication/nodes/",
      "is_positive_test": false,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_2darray",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Get all the publication under the database nodes",
      "url": "/browser/publication/nodes/",
      "is_positive_test": true,
      "mocking_required": false,
      "database_nodes": true,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Get all the publication under the database nodes using wrong database id",
      "url": "/browser/publication/nodes/",
      "is_positive_test": true,
      "incorrect_database_id": true,
      "database_nodes": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching all the publication under the database nodes using wrong database id",
      "url": "/browser/publication/nodes/",
      "is_positive_test": false,
      "database_nodes": true,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_2darray",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    }
  ],
  "delete_publication": [
    {
      "name": "Delete a publication URL",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while deleting the publication",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_scalar",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    }
  ],
  "update_publication": [
    {
      "name": "update a publication name",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "update_name": true,
      "test_data": {
        "name": "PLACE_HOLDER",
        "id": "PLACE_HOLDER"
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "update a publication event insert",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "owner_publication": true,
      "test_data": {
        "id": "PLACE_HOLDER",
        "evnt_insert": "PLACEHOLDER"
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "update a publication event delete",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "owner_publication": true,
      "test_data": {
        "id": "PLACE_HOLDER",
        "evnt_delete": "PLACEHOLDER"
      },
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching a publication to update",
      "url": "/browser/publication/obj/",
      "is_positive_test": false,
      "mocking_required": true,
      "test_data": {
        "name": "PLACE_HOLDER",
        "id": "PLACE_HOLDER"
      },
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Error while fetching a publication to update using wrong publication id",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "wrong_publication_id": true,
      "mocking_required": false,
      "test_data": {
        "id": "PLACE_HOLDER"
      },
      "mock_data": {},
      "expected_data": {
        "status_code": 500
      }
    }
  ],
  "delete_multiple_publication": [
    {
      "name": "Delete multiple publication",
      "url": "/browser/publication/obj/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {},
      "expected_data": {
        "status_code": 200
      }
    }
  ],
  "sql_publication": [
    {
      "name": "Fetch the publication SQL",
      "url": "/browser/publication/sql/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {
      },
      "expected_data": {
        "status_code": 200
      }
    },
    {
      "name": "Error while fetching a publication SQL",
      "url": "/browser/publication/sql/",
      "is_positive_test": false,
      "mocking_required": true,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 500
      }
    },
    {
      "name": "Fetching a publication mSQL",
      "url": "/browser/publication/msql/",
      "is_positive_test": true,
      "mocking_required": false,
      "mock_data": {
        "function_name": "pgadmin.utils.driver.psycopg2.connection.Connection.execute_dict",
        "return_value": "(False, 'Mocked Internal Server Error')"
      },
      "expected_data": {
        "status_code": 200
      }
    }
  ]
}
